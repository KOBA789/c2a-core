name: check_coding_rule

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  check_coding_rule:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: setup
        shell: bash
        run: ./setup.sh
      - name: check_coding_rule
        shell: bash
        continue-on-error: true
        working-directory: ./Examples/minimum_user_for_s2e/src
        run: |
          python ./src_core/Script/CI/check_coding_rule.py ./src_core/Script/CI/check_coding_rule.json | tee /tmp/coding-rule.log
          exit "${PIPESTATUS[0]}"

      - name: install reviewdog
        uses: reviewdog/action-setup@v1.0.3

      - name: fix error log source file path
        run: |
          sed 's/.\/src_core\///g' < /tmp/coding-rule.log \
          | > ./coding-rule.log \
            sed 's/.\/src_user/Examples\/minimum_user_for_s2e\/src\/src_user/g'
          cat ./coding-rule.log

      - name: reviewdog(github-pr-review)
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          reviewdog \
            -name 'check_coding_rule' \
            -level error \
            -fail-on-error=true \
            -filter-mode=added \
            -diff="git diff FETCH_HEAD" \
            -reporter=github-pr-review \
            -efm="%-GThe above files are invalid coding rule." \
            -efm="%E%f: %l: %m" \
            -efm="%Z%s" \
            < coding-rule.log
